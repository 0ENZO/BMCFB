{% extends 'base.html.twig' %}
{% block title %}{{ parent() }} - {{ topic.title }} {% endblock %}
{% block body %}

    <div class="container-fluid">
        <div class="col-md-10 mx-auto">
            <h3 class="mx-auto text-center mt-4">
                {{ topic.title }}
            </h3>
            <hr class="mt-3 mb-5">
            
            {{ form_start(form) }}

            <div class="d-flex row justify-content-center align-items-center">
                {% set i = 0 %}
                {% for statement in statements %}
                    <div class="col-md-10 ml-0 p-1 mb-3 statement">
                        <p>{{ statement.content }}</p>
                    </div>

                    <div class="col-md-2 mb-3 statement_rate">
                        {% if attribute(form, 'record' ~ i ) is defined and attribute(form, 'record' ~ i ) is not null %}
                            {{ form_widget(attribute(form, 'record' ~ i )) }}
                        {% endif %}
                    </div> 
                    
                    {% set i = i + 1 %}
                {% endfor %}
            </div>

            <div class="ml-0 text-right mt-4">
                <div class="ml-0">
                    <span class="text-muted" id="spanSubmitRecords" style='font-size:0.75rem;'>
                        Toutes les phrases doivent être annotées et chacune des 4 notes (0,2,4,6) doit-être attribuée au moins une fois.
                    </span>
                </div>
                <button class="btn btn-primary ml-0 disabled" type="submit" id="submitRecords" disabled>
                    Enregistrer<i class="far fa-paper-plane ml-2"></i>
                </button>
            </div>          
            
            {{ form_end(form) }}
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{parent() }}

    <script>
        const goodAnswers = ["0","2","4","6"];
        inputs = document.querySelectorAll('input');

        inputs.forEach(input => {
            input.addEventListener('input', () => {
                if (isCorrectlyFill()){
                    $( "#submitRecords" ).removeAttr('disabled');
                    $( "#spanSubmitRecords" ).addClass( "d-none");
                    //console.log('bien rempli');
                }else{
                    $( "#submitRecords" ).attr('disabled', 'true');
                    $( "#spanSubmitRecords" ).removeClass( "d-none" );
                    //console.log('pas bien rempli');
                }
            });
        });

        function isCorrectlyFill(){
            var formResults =[];
            inputs.forEach(input => {
                if(input.type == 'number' && ((goodAnswers.indexOf(input.value) > -1)) ){
                    formResults.push(input.value);
                }
            });

            if (formResults.length == inputs.length -1) {
                for (let i = 0; i < goodAnswers.length; i++) { 
                    //console.log('valeur cherchée : ' +  goodAnswers[i]);

                    if ( !((formResults.indexOf(goodAnswers[i]) > -1)) ){
                        return false;
                        //console.log('valeur pas trouvée');
                        break;
                    }
                    //console.log('valeur trouvée');
                }
                return true;
            } else {
                //console.log('Toutes les phrases doivent être notées.');
            }
            // if( !(["0","2","4","6"].includes(inputs[i].value)) ) {
        }

    </script>

{% endblock %}